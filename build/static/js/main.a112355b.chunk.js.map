{"version":3,"sources":["components/Authorization.js","components/Home.js","components/Admin.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Authorization","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","target","name","setState","login","value","pass","handleSubmit","preventDefault","arrLogin","arrPassword","state","localStorage","getItem","push","setItem","JSON","stringify","parse","_this$state","react_default","a","createElement","className","type","placeholder","onChange","Link","to","disabled","Component","Home","onClick","signOut","Admin","About","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SA4EeA,qBAvEX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,aAAe,SAACC,GACZ,IAAIC,EAASD,EAAEC,OAAOC,KACP,UAAXD,GAAoBT,EAAKW,SAAS,CAAEC,MAAOJ,EAAEC,OAAOI,QACzC,SAAXJ,GAAmBT,EAAKW,SAAS,CAAEG,KAAMN,EAAEC,OAAOI,SAXvCb,EAcnBe,aAAgB,SAACP,GACbA,EAAEQ,iBACF,IAAIC,EAAW,GACXC,EAAc,GACdN,EAAQZ,EAAKmB,MAAMP,MACnBE,EAAOd,EAAKmB,MAAML,KACtB,GAAIM,aAAaC,QAAQ,UAA4C,MAAhCD,aAAaC,QAAQ,QACtDJ,EAASK,KAAKV,GACdM,EAAYI,KAAKR,GACjBM,aAAaG,QAAQ,QAASC,KAAKC,UAAUR,IAC7CG,aAAaG,QAAQ,OAAQC,KAAKC,UAAUP,QAE3C,CACD,IAAID,EAAWO,KAAKE,MAAMN,aAAaC,QAAQ,UAC3CH,EAAcM,KAAKE,MAAMN,aAAaC,QAAQ,SAClDJ,EAASK,KAAKV,GACdM,EAAYI,KAAKR,GACjBM,aAAaG,QAAQ,QAASC,KAAKC,UAAUR,IAC7CG,aAAaG,QAAQ,OAAQC,KAAKC,UAAUP,MA9BhDlB,EAAKmB,MAAQ,CACTP,MAAO,GACPE,KAAM,IAJKd,wEAqCV,IAAA2B,EACmBxB,KAAKgB,MAArBP,EADHe,EACGf,MAAOE,EADVa,EACUb,KACf,OACIc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACLC,YAAY,4EACZF,UAAU,GACVrB,KAAK,QACLG,MAAOD,EACPsB,SAAU/B,KAAKI,eAEtBqB,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WACLC,YAAY,kFACZpB,MAAOC,EACPJ,KAAK,OACLwB,SAAU/B,KAAKI,eAGX,KAAVK,GAAyB,KAATE,EACbc,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,SACLR,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASE,SAAU/B,KAAKY,cAArC,SAEJa,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,SACLR,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASK,UAAQ,GAA9B,kBA9DAC,cCkBbC,mLAjBP,OACIX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,KACLR,EAAAC,EAAAC,cAAA,UAAQU,QAASrC,KAAKsC,SAAtB,aAEJb,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UACLR,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UACLR,EAAAC,EAAAC,cAAA,gCAZDQ,aCmBJI,mLAjBP,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,KACLR,EAAAC,EAAAC,cAAA,UAAQU,QAASrC,KAAKsC,SAAtB,aAEJb,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UACLR,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,SACLR,EAAAC,EAAAC,cAAA,+BAZAQ,aCmBLK,mLAjBP,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,KACLR,EAAAC,EAAAC,cAAA,UAAQU,QAASrC,KAAKsC,SAAtB,aAEJb,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UACLR,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UACLR,EAAAC,EAAAC,cAAA,gCAZAQ,aCuBLM,0LAbX,OACIhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYnD,IAClC8B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWV,IAC/BX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWN,IAChCf,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWP,aAT9BJ,cCEEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a112355b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport  './Authorization.css'\r\n\r\nclass Authorization extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            login: '',\r\n            pass: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let target = e.target.name\r\n         if(target === 'login') this.setState({ login: e.target.value })\r\n         if(target === 'pass') this.setState({ pass: e.target.value })\r\n    }\r\n\r\n    handleSubmit  = (e) => {\r\n        e.preventDefault()\r\n        let arrLogin = []\r\n        let arrPassword = []\r\n        let login = this.state.login\r\n        let pass = this.state.pass\r\n        if (localStorage.getItem('login') || localStorage.getItem('pass') == null) {\r\n            arrLogin.push(login)\r\n            arrPassword.push(pass)\r\n            localStorage.setItem('login', JSON.stringify(arrLogin))\r\n            localStorage.setItem('pass', JSON.stringify(arrPassword))\r\n        }\r\n        else {\r\n            let arrLogin = JSON.parse(localStorage.getItem('login'))\r\n            let arrPassword = JSON.parse(localStorage.getItem('pass'))\r\n            arrLogin.push(login)\r\n            arrPassword.push(pass)\r\n            localStorage.setItem('login', JSON.stringify(arrLogin))\r\n            localStorage.setItem('pass', JSON.stringify(arrPassword))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { login, pass } = this.state\r\n        return (\r\n            <div>\r\n                <form className=\"wrap-form\">\r\n                    <input type=\"text\"\r\n                           placeholder=\"Введите логин\"\r\n                           className=\"\"\r\n                           name=\"login\"\r\n                           value={login}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <input type=\"password\"\r\n                           placeholder=\"Введите пароль\"\r\n                           value={pass}\r\n                           name=\"pass\"\r\n                           onChange={this.handleChange}\r\n                    />\r\n\r\n                    {login !== \"\" && pass !== \"\" ?\r\n                        <Link to=\"/home\">\r\n                            <button type=\"submit\" onChange={this.handleSubmit}>Send</button>\r\n                        </Link> :\r\n                        <Link to=\"/home\">\r\n                            <button type=\"submit\" disabled>Send</button>\r\n                        </Link>\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authorization\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home</h1>\r\n                <Link to=\"/\">\r\n                    <button onClick={this.signOut}>Sign out</button>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                    <button>About</button>\r\n                </Link>\r\n                <Link to=\"/admin\">\r\n                    <button>Admin</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Admin</h1>\r\n                <Link to=\"/\">\r\n                    <button onClick={this.signOut}>Sign out</button>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                    <button>About</button>\r\n                </Link>\r\n                <Link to=\"/home\">\r\n                    <button>Home</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n                <Link to=\"/\">\r\n                    <button onClick={this.signOut}>Sign out</button>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                    <button>Home</button>\r\n                </Link>\r\n                <Link to=\"/admin\">\r\n                    <button>Admin</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Authorization from './components/Authorization'\nimport Home from './components/Home'\nimport Admin from './components/Admin'\nimport About from './components/About'\n\n\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route exact path=\"/\" component={ Authorization } />\n                <Route path=\"/home\" component={Home}/>\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/admin\" component={Admin}/>\n            </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}